#!/bin/bash
# REAL Claude CLI Brainstorming - Claude ACTUALLY analyzes the code
# No simulations, no hardcoded tasks - REAL implementation

PROJECT_ID=$1
PROJECT_PATH=$2
USER_REQUEST=$3
SESSION_ID=$4

if [ -z "$PROJECT_ID" ] || [ -z "$PROJECT_PATH" ] || [ -z "$USER_REQUEST" ]; then
    echo "Usage: $0 <project_id> <project_path> <user_request> [session_id]"
    exit 1
fi

# Generate session ID if not provided
if [ -z "$SESSION_ID" ]; then
    SESSION_ID="brainstorm-${PROJECT_ID}-$(date +%s)"
fi

# Create output directory
OUTPUT_DIR="/tmp/noderr-brainstorms/${SESSION_ID}"
mkdir -p "$OUTPUT_DIR"

echo "Starting REAL Claude brainstorm session..."
echo "  Project: ${PROJECT_ID}"
echo "  Path: ${PROJECT_PATH}"
echo "  Request: ${USER_REQUEST}"
echo "  Session: ${SESSION_ID}"

# Log the session
cat > "${OUTPUT_DIR}/session.json" << EOF
{
  "sessionId": "${SESSION_ID}",
  "projectId": "${PROJECT_ID}",
  "projectPath": "${PROJECT_PATH}",
  "userRequest": "${USER_REQUEST}",
  "startTime": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
  "status": "running",
  "outputDir": "${OUTPUT_DIR}"
}
EOF

# Start tmux session in project directory
tmux new-session -d -s "$SESSION_ID" -c "$PROJECT_PATH"

# Create the REAL prompt for Claude
CLAUDE_PROMPT="You are in a project directory: ${PROJECT_PATH}

USER REQUEST: ${USER_REQUEST}

Your task is to:
1. ACTUALLY explore this codebase using real commands
2. Understand the project structure, tech stack, and patterns
3. Break down the user's request into specific, actionable tasks
4. Generate a JSON file with the task breakdown

Start by exploring the project:
- Use 'ls -la' to see files
- Use 'find . -type f -name \"*.js\" -o -name \"*.py\" -o -name \"*.go\" | head -20' to find source files
- Use 'cat package.json' or 'cat README.md' to understand the project
- Use 'grep -r \"function\" --include=\"*.js\" | head -10' to see code patterns

After you understand the codebase, create a file at ${OUTPUT_DIR}/tasks.json with this structure:
{
  \"analysis\": \"Your actual analysis of this specific codebase\",
  \"tasks\": [
    {
      \"id\": \"task-1\",
      \"title\": \"Specific task title\",
      \"description\": \"Detailed description based on actual code\",
      \"estimatedHours\": 2-4,
      \"complexity\": \"low|medium|high\",
      \"dependencies\": [],
      \"technicalDetails\": \"Specific files and functions to modify\",
      \"files\": [\"actual/files/to/modify.js\"]
    }
  ],
  \"clarifyingQuestions\": [\"Real questions based on code\"],
  \"assumptions\": [\"Assumptions based on codebase\"],
  \"risks\": [\"Real risks you identified\"]
}

Use this command to create the JSON file:
cat > ${OUTPUT_DIR}/tasks.json << 'EOF'
(your JSON here)
EOF

Start exploring now!"

# Send commands to Claude
tmux send-keys -t "$SESSION_ID" "# REAL Claude Brainstorming Session" Enter
tmux send-keys -t "$SESSION_ID" "# Request: ${USER_REQUEST}" Enter
tmux send-keys -t "$SESSION_ID" "cd ${PROJECT_PATH}" Enter
tmux send-keys -t "$SESSION_ID" "" Enter

# Start Claude
tmux send-keys -t "$SESSION_ID" "claude" Enter
sleep 1

# Send the prompt to Claude line by line
echo "$CLAUDE_PROMPT" | while IFS= read -r line; do
    escaped_line=$(echo "$line" | sed "s/'/'\\\\''/g")
    tmux send-keys -t "$SESSION_ID" "$escaped_line" Enter
done

# Create a monitor that checks for completion
cat > "${OUTPUT_DIR}/monitor.sh" << 'MONITOR'
#!/bin/bash
OUTPUT_DIR="$1"
SESSION_ID="$2"
TIMEOUT=120  # 2 minutes max for brainstorming

ELAPSED=0
while [ $ELAPSED -lt $TIMEOUT ]; do
    if [ -f "${OUTPUT_DIR}/tasks.json" ]; then
        echo "Tasks generated by Claude!"
        # Validate JSON
        if jq . "${OUTPUT_DIR}/tasks.json" > /dev/null 2>&1; then
            echo "Valid JSON created"
        else
            echo "Invalid JSON, waiting..."
        fi
        break
    fi
    
    if ! tmux has-session -t "$SESSION_ID" 2>/dev/null; then
        echo "Session ended"
        break
    fi
    
    sleep 2
    ELAPSED=$((ELAPSED + 2))
done

# If no tasks after timeout, create emergency fallback
if [ ! -f "${OUTPUT_DIR}/tasks.json" ] || ! jq . "${OUTPUT_DIR}/tasks.json" > /dev/null 2>&1; then
    echo "Creating emergency fallback tasks"
    cat > "${OUTPUT_DIR}/tasks.json" << 'JSON'
{
  "analysis": "Claude session timed out - using emergency fallback",
  "tasks": [
    {
      "id": "task-1",
      "title": "Analyze codebase",
      "description": "Review the project structure",
      "estimatedHours": 2,
      "complexity": "low",
      "dependencies": [],
      "technicalDetails": "Manual analysis required",
      "files": []
    }
  ],
  "clarifyingQuestions": ["Session timed out"],
  "assumptions": [],
  "risks": ["Tasks not based on actual code analysis"]
}
JSON
fi
MONITOR

chmod +x "${OUTPUT_DIR}/monitor.sh"

# Start monitor in background
"${OUTPUT_DIR}/monitor.sh" "$OUTPUT_DIR" "$SESSION_ID" > "${OUTPUT_DIR}/monitor.log" 2>&1 &
MONITOR_PID=$!

echo ""
echo "‚úÖ REAL Claude brainstorm session started"
echo "üìÅ Tasks will be saved to: ${OUTPUT_DIR}/tasks.json"  
echo "üìä Monitor PID: ${MONITOR_PID}"
echo "üëÄ Watch Claude analyze: tmux attach -t ${SESSION_ID}"
echo ""

# Return success
exit 0